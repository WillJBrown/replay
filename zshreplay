#!/usr/bin/zsh

# The MIT License (MIT)
# Copyright © 2021 William Brown
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# This script takes a list of commands and replays them in the zsh shell
# asking for confirmation each time. It remembers the position you got to
# in the command list in a simple .{command list}.ln file
# In order to replay .zhistory ( $HISTFILE ) files which have time stamps
# enabled (for example by turning sharehistory on ( setopt -o sharehistory)),
# the -t option can be used to strip the timestamps from the input as it is
# parsed.

if [[ ($#argv -eq 1) || (($#argv -eq 2) && ($argv[1] == '-t')) ]]; then;
    if [[ $argv[1] == '-t' ]]; then;
        striptime=0
        fname=$argv[2]
    else
        striptime=1
        fname=$argv[1]
    fi
    if [[ -f $fname ]]; then
        cmds=()
        while read line; do
        if [[ $striptime == 1 ]]; then
            cmds+=(${line})
        else
            cmds+=(${line##*;})
        fi
        done < $fname
        print "There are ${#cmds} lines in ${fname}"
        NEWLINE=$'\n'
        if [[ -f .$fname.ln ]]; then
            read start < .$fname.ln
            print "Continuing from line ${start}"
        else
            start=1
        fi
        for (( i = $start; i <= $#cmds; i++ )) do
            read -q "?Run Next Command?${NEWLINE}${cmds[i]}${NEWLINE}"
            print
            if [[ $REPLY == 'y' ]] then
                command ${cmds[i]}
            else
                command echo $i > .$fname.ln
                command chmod --reference=$fname .$fname.ln >/dev/null 2>&1
                command chown --reference=$fname .$fname.ln >/dev/null 2>&1
                break
            fi
        done
    else 
        print "No regular file called ${fname} in directory"
    fi
else
    print "Expects one filepath argument and optional '-t' flag for stripping timestamps"
fi
